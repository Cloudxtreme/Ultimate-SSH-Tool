##DESCRP=Check if WordPress XMLRPC Pingback Vuln (eg. xmlrpcvulntest http://test.org http://test.org/post)
function xmlrpcvulntest(){
	function fail(){
	    echo -e "\033[31m \xE2\x9C\x98 \033[00m\c"
	}
	function pass(){
	    echo -e "\033[32m \xE2\x9C\x93 \033[00m\c"
	}
		if [ -z "$1" ]; then 
			echo "Please provide the URL to test.";
		elif [ -z "$2" ]; then
			echo "Please provide a valid blog/post URL from the test site.";
		else
			testurl="$1"
			blogposturl="$2"
			esc_blogpostulr="$(echo "$2" |sed 's/\//\\\//g')"
			useragent="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2438.3 Safari/537.36"
			xmlrpcurl="$1/xmlrpc.php"
			esc_xmlrpcurl="$(echo "$xmlrpcurl" |sed 's/\//\\\//g')"
			distpostdata="$(curl -s http://repo.servergur.us/code/rawxmlrpctest.dist)"
			tmppostfile="/tmp/xmlrpc_post_data"
			tmptestlog="/tmp/xmlrpc_test_log"
				if [ -f "$tmppostfile" ]; then rm -f "$tmppostfile"; fi
				if [ -f "$tmptestlog" ]; then rm -f "$tmptestlog"; fi
					echo "$distpostdata" |sed "s/VULNSITEURL/$esc_xmlrpcurl/g" |sed "s/VALIDPOSTURL/$esc_blogposturl/g" > "$tmppostfile"
						curl -vs -A "$useragent" -X POST "$xmlrpcurl" --data @"$tmppostfile" > "$tmptestlog" 2>&1
							if [ ! -z "$(grep "Pingback from" $tmptestlog)" ]; then 
								fail; echo "Server IS vulnerable to the XMLRPC pingback exploit!"; 
									echo "The verbose output from this vulnerability test can be found in this paste:";
									echo "====";
										curl -F file=@"$tmptestlog" paste.privatesystems.net;
									echo "====";
							else
								pass; echo "Server is not vulnerable."; 
								echo "====";
									grep '<string>' "$tmptestlog";
									grep '301' "$tmptestlog";
								echo "====";
							fi
				if [ -f "$tmppostfile" ]; then rm -f "$tmppostfile"; fi
				if [ -f "$tmptestlog" ]; then rm -f "$tmptestlog"; fi
		fi
}
