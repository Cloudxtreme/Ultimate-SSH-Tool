##DESCRP=Check all (wp, joom, drup) versions. Version2-ALPHA
function cmsversions2a(){
# Check for support dirs and files.
BINDIR='/root/support/.bin'
CMSVDIR='/root/support/cmsversions'
CMSVSCANLOG="$CMSVDIR/cmsversions-`(date +"%m-%d-%Y")`.log"
if [[ ! -d "$BINDIR" ]]; then
  mkdir -p "$BINDIR"
fi
if [[ ! -d "$CMSVDIR" ]]; then
  mkdir -p "$CMSVDIR"
fi
if [[ -f "$CMSVSCANLOG" ]]; then
  mv -f "$CMSVSCANLOG" "$CMSVSCANLOG".old;
  touch "$CMSVSCANLOG";
fi
# Check for ACK tool, download if not installed.
if [[ ! -f /root/support/.bin/ackpl ]]; then
    curl -so /root/support/.bin/ackpl.gz http://repo.servergur.us/packages/ackplgz;
    gunzip /root/support/.bin/ackpl.gz && chmod +x /root/support/.bin/ackpl
  else
    ACK='/root/support/.bin/ackpl'
fi
# Check Document Root location(s).
HTTPDROOT=$(httpd -V |grep HTTPD_ROOT |awk '{gsub("-D HTTPD_ROOT=", "");gsub(/"/, "");print}')
HTTPDCONF=$(httpd -V |grep SERVER_CONFIG_FILE |awk '{gsub("-D SERVER_CONFIG_FILE=", "");gsub(/"/, "");print}')
CONFPATH=$(echo $HTTPDROOT/$(echo $HTTPDCONF))
	if [ -d "/etc/httpd/conf/plesk.conf.d/vhosts/" ]; then
	        DOCROOTS=$(grep -RPo --no-filename '\/var\/www\/vhosts\/(.*)\/httpdocs' /var/www/vhosts/system/*/conf/ | uniq)
	else
		DOCROOTS=$(grep "DocumentRoot" $CONFPATH |awk '{gsub("    DocumentRoot ", "");print}')
	fi
# Check for signs of each type of CMS, before processing with search.
echo "Scanning for known CMS installations..."
echo " "
if [[ ! -z "$($ACK -1 --php -g wp-includes/version /home/*/public_html/)" ]]; then
  echo "WordPress installs found."
    WPLATEST=$(curl -sI https://wordpress.org/latest.tar.gz | grep filename| cut -d- -f3 | cut -d. -f1-2)
    echo "Latest WordPress Version: $WPLATEST"
fi
if [[ ! -z "$($ACK -1 --php -g 'libraries/joomla/version|libraries/cms/version|libraries/cms/version/version' /home/*/public_html/)" ]]; then
  echo "Joomla! installs found."
    JLATEST=$(curl -A "Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5" -s http://www.joomla.org/download.html |grep -Po "Joomla_(?:\d*\.?\d+\.?\d+)\-Stable\-Full\_Package\.zip" | grep -Po "(?:\d*\.?\d+\.?\d+)" |tr "\n" " ")
    echo "Latest Joomla! Version(s): $JLATEST"
fi
if [[ ! -z "$($ACK -1 --php -g modules/system/system.info /home/*/public_html/)" ]]; then
  echo "Drupal installs found."
    DLATEST=$(curl -s https://www.drupal.org/project/drupal | grep -Po "drupal\-(?:\d*\.?\d+\.?\d+).tar.gz" | grep -Po "(?:\d*\.?\d+\.?\d+)" |tr "\n" " ")
    echo "Latest Drupal Version(s): $DLATEST"
fi
if [[ ! -z "$($ACK -1 --php -g manager/includes/version.inc /home/*/public_html/)" ]]; then
  echo "ModX Evolution installs found."
    MXLATEST=$(curl -A "Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5" -s http://modx.com/download/evolution/ |grep -Po "\<h3\>(.*?)\<\/h3\>" |head -n1 |sed 's/<h3>MODX Evolution //g' |sed 's/<\/h3>//g')
    echo "Latest ModX Evolution Version: $MXLATEST"
fi
echo "Initial scan completed."
echo " "
## Begin Search

#
# Match version num only: cat cmslog.scan |awk '{print $3}' |sed "s/';\|'//g"
# 

if [[ ! -z "$WPLATEST" ]]; then
  echo "Searching for *OUTDATED* WordPress versions..."
  echo " "
    for i in $DOCROOTS
      do
        if [ -d "$i" ]; then
          find $i -type f -iwholename "*/wp-includes/version.php" -exec grep -H "\$wp_version =" {} \; >> "$CMSVSCANLOG"
        fi
    done
  echo " "
fi

##
## STOPPING POINT
## 

echo "Searching for Joomla! versions..."
echo " "
  for i in $DOCROOTS
  do
    if [ -d "$i" ]; then
      find $i -type f \( -iwholename '*/libraries/joomla/version.php' -o -iwholename '*/libraries/cms/version.php' -o -iwholename '*/libraries/cms/version/version.php' \) -print0 -exec perl -e 'while 
(<>) { $release = $1 if m/ \$RELEASE\s+= .([\d.]+).;/; $dev = $1 if m/ \$DEV_LEVEL\s+= .(\d+).;/; } print qq( = $release.$dev\n);' {} \;
    fi
  done
echo " "
echo "Searching for Drupal versions..."
echo " "
  for i in $DOCROOTS
  do
    if [ -d "$i" ]; then
      find $i -type f -iwholename "*/modules/system/system.info" -exec grep -H "version = \"" {} \;
    fi
  done
echo " "
echo "Searching for ModX Evolution versions..."
echo " "
  for i in $DOCROOTS
  do
    if [ -d "$i" ]; then
      find $i -type f -iwholename "*/manager/includes/version.inc.php" -exec grep -H "version = '" {} \;
    fi
  done
echo " "
echo "CMS version search completed."
}

